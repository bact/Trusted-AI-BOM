{
  "@context": [
    "https://www.w3.org/ns/credentials/v2"
  ],
  "id": "urn:uuid:a9ec6f28-0bfc-11f0-b1bf-db29b905fa9a",
  "type": "VerifiableCredential",
  "name": null,
  "description": null,
  "issuer": "did:volt:bed919ab-6081-40e7-9677-88d1cd37a0c0",
  "validFrom": "2025-03-26T12:50:00+00:00",
  "validUntil": null,
  "credentialStatus": null,
  "credentialSchema": {
    "id": "https://github.com/nqminds/ClaimCascade/tree/main/packages/schemas/src/schema.json",
    "type": "JsonSchema"
  },
  "credentialSubject": {
    "$id": "https://github.com/nqminds/Trusted-AI-BOM/blob/main/packages/schemas/src/taibom-schemas/66-polluted-attestation.v1.0.0.schema.yaml",
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "title": "Polluted Attestation",
    "description": "This schema extends the generic Attestation Schema to define an attestation that a component is polluted\n",
    "type": "object",
    "properties": {
      "component": {
        "type": "object",
        "description": "Component reference, including an ID and hash for the VC claim.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The component ID (unique identifier) of the VC claim."
          },
          "hash": {
            "type": "string",
            "description": "Cryptographic hash (e.g., SHA-256) for verifying the integrity of the VC claim."
          }
        },
        "required": [
          "id",
          "hash"
        ]
      },
      "attestation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "polluted"
            ],
            "description": "Type of attestation, set to \"Polluted\" for this schema."
          },
          "pollution": {
            "type": "object",
            "description": "Data pollution event that applies to the particular component.",
            "properties": {
              "date": {
                "type": "string",
                "description": "The date when the data pollution event was identified."
              },
              "type": {
                "type": "string",
                "description": "The type of data pollution (e.g., label noise, bias amplification, concept drift, distribution shift)."
              },
              "severity": {
                "type": "string",
                "description": "Severity of the data pollution issue."
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the data pollution event."
              },
              "observed_impact": {
                "type": "string",
                "description": "How the pollution manifests in predictions or decisions."
              },
              "detection_method": {
                "type": "string",
                "description": "How the issue was detected (e.g., dataset audit, fairness metric analysis)."
              }
            },
            "required": [
              "date",
              "type"
            ]
          }
        },
        "required": [
          "type",
          "pollution"
        ]
      }
    },
    "required": [
      "component",
      "attestation"
    ],
    "context": "## Introduction\n\nThe **Polluted Attestation Schema** extends the generic Attestation Schema to enable attestations related to data pollution. By referencing pollution event details such as the type of pollution (e.g., label noise, bias amplification, concept drift, distribution shift, etc.), the date, and severity, this schema ensures a structured way to document and track reported data pollution events.\n\n### Description\nThis schema includes:\n- **Type**: The attestation type, set to \"Polluted\".\n- **Pollution Details**: Provides details of the data pollution event, including pollution type, date, severity and observed impact.\n\n## Use Case\n\nThe **Pollution Attestation Schema** is used to:\n1. **Document Pollution Events**: Attach details of pollution events to attestations for components.\n2. **Track Data Integrity Issues**: Keep track of components affected by polluted data and trace the impact on downstream models or decisions.\n3. **Support Compliance & Fairness**: Ensure that polluted components are monitored and addressed in line with ethical AI and regulatory standards.\n\nThis schema promotes transparency and accountability, ensuring that data pollution issues are communicated clearly across software supply chains. It also helps organizations trace how polluted data may have impacted AI model behavior and mitigate potential risks.\n"
  }
}